import json
from tweepy.streaming import StreamListener
from tweepy import Stream
from tweepy import OAuthHandler
import twitter_credentials
import couchdb
import os
from tweepy import API
from tweepy import Cursor
import geo_task
import sentiment_task
import requests

USERNAME = 'ccc'
PASSWORD = '90024'
ADDRESS = '{{hostvars[ansible_host]['groups']['coordinator'][0]}}'
PORT = '5984'


def write_couchdb(database_name, id, doc):
    databaseURL = ("http://%s:%s@%s:%s/%s" % (USERNAME, PASSWORD,ADDRESS,PORT,database_name))
    header = {"Content-Type": "application/json"}
    response = requests.put(databaseURL + '/' + str(id), data=json.dumps(doc), headers=header)


class TwitterAuthenticator():

    def authenticate_twitter_app(self):
        auth = OAuthHandler(twitter_credentials.CONSUMER_KEY, twitter_credentials.CONSUMER_SECRET)
        auth.set_access_token(twitter_credentials.ACCESS_TOKEN, twitter_credentials.ACCESS_SECRET)
        return auth


class TwitterStreamer():
    """
    class for twitter streaming and processing
    """

    def __init__(self):
        self.twitter_authenticator = TwitterAuthenticator();

    def stream_tweets(self, database_name, GEOBOX_AUSTRALIA, hashtag_list):
        listener = TwitterListener(database_name)
        auth = self.twitter_authenticator.authenticate_twitter_app()

        twitterStream = Stream(auth, listener)
        twitterStream.filter(locations=GEOBOX_AUSTRALIA)
        # twitter_streamer.filter(track=hashtag_list,languages=['en'])
        # twitterStream.filter(languages='english')


class TwitterListener(StreamListener):
    """
        This just a basic listener class that just prints received tweets to stdout.
    """

    def __init__(self, fetched_tweets_filename):
        self.fetched_tweets_filename = fetched_tweets_filename

    def on_data(self, data):
        try:
            data = json.loads(data)
            tweet = geo_task.geo_processing(data)
            tweet = sentiment_task.sentiment_analyser(tweet)
            _id = tweet["id_str"]
            doc_data = {"_id": _id, "tweet_data": tweet}
            write_couchdb(database_name,_id, doc_data)
            # db.save(doc_data)
            print(doc_data)
            return True
        except BaseException as e:
            print("Error on_data: %s" % str(e))
        return True

    def on_error(self, status_code):
        if status_code == 420:
            print(status_code)
            return False


if __name__ == '__main__':
    database_name = 'twitter_data'
    hashtag_list = ['COVID19', 'Coronavirous', 'covid19', 'chinesevirus''covid 19']
    AU_Polygon = [112.35, -43.56, 154.41, -10.16]
    twitter_streamer = TwitterStreamer()
    twitter_streamer.stream_tweets(database_name, AU_Polygon, hashtag_list)
