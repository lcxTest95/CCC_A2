{"remainingRequest":"/Users/xl/Desktop/学习/COMP90024/Assignment2/project/CCC_A2/Frontend/node_modules/babel-loader/lib/index.js!/Users/xl/Desktop/学习/COMP90024/Assignment2/project/CCC_A2/Frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/xl/Desktop/学习/COMP90024/Assignment2/project/CCC_A2/Frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xl/Desktop/学习/COMP90024/Assignment2/project/CCC_A2/Frontend/src/views/map.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/xl/Desktop/学习/COMP90024/Assignment2/project/CCC_A2/Frontend/src/views/map.vue","mtime":1590364333842},{"path":"/Users/xl/Desktop/学习/COMP90024/Assignment2/project/CCC_A2/Frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xl/Desktop/学习/COMP90024/Assignment2/project/CCC_A2/Frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/xl/Desktop/学习/COMP90024/Assignment2/project/CCC_A2/Frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xl/Desktop/学习/COMP90024/Assignment2/project/CCC_A2/Frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gIkAvYXNzZXRzL2F4aW9zLmpzIjsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKSB7CiAgICByZXR1cm4ge307CiAgfSwKCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuZHJhdygpOwogIH0sCgogIG1ldGhvZHM6IHsKICAgIGRhdGFfcHJvY2VzcyhMYXRMb24sIHRoZV9kYXRhKSB7CiAgICAgIGxldCBkYXRhID0gW107CiAgICAgIGxldCBjb3VudF9MYXRMb24gPSAwOyAvL0RlZmluZSB0aGUgdmFsdWUgZm9yIGVhY2ggdmFyaWFibGUKCiAgICAgIGZvciAodmFyIGtleSBpbiBMYXRMb25bImZlYXR1cmVzIl0pIHsKICAgICAgICBjb3VudF9MYXRMb24rKzsKICAgICAgICBsZXQgbmFtZV92YWx1ZSA9IExhdExvblsiZmVhdHVyZXMiXVtrZXldWyJwcm9wZXJ0aWVzIl1bIlNBNF9DT0RFIl07CiAgICAgICAgbGV0IG5hbWVfdmFsdWUxID0gTGF0TG9uWyJmZWF0dXJlcyJdW2tleV1bInByb3BlcnRpZXMiXVsiU1RBVEVfTkFNRSJdOwogICAgICAgIExhdExvblsiZmVhdHVyZXMiXVtrZXldWyJwcm9wZXJ0aWVzIl1bIm5hbWUiXSA9IG5hbWVfdmFsdWU7CgogICAgICAgIGlmICh0aGVfZGF0YVtuYW1lX3ZhbHVlXSkgewogICAgICAgICAgbGV0IGpzb24gPSB7CiAgICAgICAgICAgIG5hbWU6IG5hbWVfdmFsdWUsCiAgICAgICAgICAgIHZhbHVlOiB0aGVfZGF0YVtuYW1lX3ZhbHVlXVsicG9sIl0gKiAxMDAwLAogICAgICAgICAgICBpbmM6IHRoZV9kYXRhW25hbWVfdmFsdWVdWyJpbmMiXSwKICAgICAgICAgICAgZWR1OiB0aGVfZGF0YVtuYW1lX3ZhbHVlXVsiZWR1Il0sCiAgICAgICAgICAgIGVtbzogdGhlX2RhdGFbbmFtZV92YWx1ZV1bInBvbDEiXSwKICAgICAgICAgICAgaDE6IHRoZV9kYXRhW25hbWVfdmFsdWVdWyJoYXNodGFnMSJdLAogICAgICAgICAgICBoMjogdGhlX2RhdGFbbmFtZV92YWx1ZV1bImhhc2h0YWcyIl0sCiAgICAgICAgICAgIGgzOiB0aGVfZGF0YVtuYW1lX3ZhbHVlXVsiaGFzaHRhZzMiXSwKICAgICAgICAgICAgU3RhdGVfbmFtZTogTGF0TG9uWyJmZWF0dXJlcyJdW2tleV1bInByb3BlcnRpZXMiXVsiU0E0X05BTUUiXSArICIsICIgKyBuYW1lX3ZhbHVlMSwKICAgICAgICAgICAgc2E0OiBMYXRMb25bImZlYXR1cmVzIl1ba2V5XVsicHJvcGVydGllcyJdWyJTQTRfTkFNRSJdCiAgICAgICAgICB9OwogICAgICAgICAgZGF0YS5wdXNoKGpzb24pOwogICAgICAgIH0KICAgICAgfQoKICAgICAgbGV0IGNvdW50X2RhdGEgPSAwOwogICAgICByZXR1cm4gewogICAgICAgIExhdExvbjogTGF0TG9uLAogICAgICAgIGRhdGE6IGRhdGEKICAgICAgfTsKICAgIH0sCgogICAgLy9lY2hhcnRzIGRyYXdpbmcKICAgIGRyYXcoKSB7CiAgICAgIGxldCBteUNoYXJ0ID0gdGhpcy4kZWNoYXJ0cy5pbml0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJNYXAiKSk7CiAgICAgIG15Q2hhcnQuc2hvd0xvYWRpbmcoKTsgLy9HZXQgZGF0YSBmcm9tIGpzb24gYW5kIEJhY2stZW5kCgogICAgICBsZXQgTGF0TG9uID0gcmVxdWlyZSgiLi4vYXNzZXRzL2pzb24vU0E0XzIwMTZfQVVTVC5qc29uIik7CgogICAgICBsZXQgdGVzdF9kYXRhID0gW107CiAgICAgIGF4aW9zKHsKICAgICAgICBtZXRob2Q6ICJHRVQiLAogICAgICAgIHVybDogImh0dHA6Ly8xMjcuMC4wLjE6NTAwMC9hZG1pbiIKICAgICAgfSkudGhlbihyZXMgPT4gewogICAgICAgIHRlc3RfZGF0YSA9IHJlcy5kYXRhOwogICAgICAgIGNvbnNvbGUubG9nKHRlc3RfZGF0YSk7CiAgICAgICAgbGV0IGFsbF9kYXRhID0gdGhpcy5kYXRhX3Byb2Nlc3MoTGF0TG9uLCB0ZXN0X2RhdGEpOwogICAgICAgIGNvbnNvbGUubG9nKGFsbF9kYXRhKTsKICAgICAgICB0aGlzLiRlY2hhcnRzLnJlZ2lzdGVyTWFwKCJBdXN0cmFsaWEiLCBhbGxfZGF0YVsiTGF0TG9uIl0pOwogICAgICAgIGxldCBvcHRpb24gPSB7CiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICJyZ2IoMTY5LDIxNiwyNTMpIiwKICAgICAgICAgIHRpdGxlOiB7CiAgICAgICAgICAgIHRleHQ6ICJIZWF0IE1hcCBvZiBQZW9wbGUncyBNb29kIGluIEF1c3RyYWxpYSBieSBEaWZmZXJlbnQgQXJlYXMiLAogICAgICAgICAgICBsZWZ0OiAicmlnaHQiCiAgICAgICAgICB9LAogICAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgICBwb3NpdGlvbjogZnVuY3Rpb24gKHBvaW50LCBwYXJhbXMsIGRvbSwgcmVjdCwgc2l6ZSkgewogICAgICAgICAgICAgIC8vVGV4dCBwb3NpdGlvbgogICAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICByaWdodDogIjIwcHgiLAogICAgICAgICAgICAgICAgdG9wOiAiMjBweCIKICAgICAgICAgICAgICB9OwogICAgICAgICAgICB9LAogICAgICAgICAgICBsZWZ0OiAibGVmdCIsCiAgICAgICAgICAgIHRyaWdnZXI6ICJpdGVtIiwKICAgICAgICAgICAgc2hvd0RlbGF5OiAwLAogICAgICAgICAgICB0cmFuc2l0aW9uRHVyYXRpb246IDAuMiwKICAgICAgICAgICAgZm9ybWF0dGVyOiBmdW5jdGlvbiAocGFyYW1zKSB7CiAgICAgICAgICAgICAgLy9UZXh0IGNvbnRlbnQKICAgICAgICAgICAgICB2YXIgdmFsdWUgPSAocGFyYW1zLnZhbHVlICsgIiIpLnNwbGl0KCIuIik7CiAgICAgICAgICAgICAgdmFsdWUgPSB2YWx1ZVswXS5yZXBsYWNlKC8oXGR7MSwzfSkoPz0oPzpcZHszfSkrKD8hXGQpKS9nLCAiJDEsIik7CiAgICAgICAgICAgICAgcmV0dXJuICJTQTQgQ29kZTogIiArIHBhcmFtcy5kYXRhLm5hbWUgKyAiPGJyLz4iICsgcGFyYW1zLmRhdGEuU3RhdGVfbmFtZSArICI8YnIvPiBFbW90aW9uOiAiICsgcGFyYW1zLmRhdGEuZW1vICsgIjxici8+IEluY29tZTogJCIgKyBwYXJhbXMuZGF0YS5pbmMgKyAiPGJyLz5FZHVjYXRpb24gTGV2ZWw6ICIgKyBwYXJhbXMuZGF0YS5lZHUgKyAiJTxici8+VG9wIDMgSGFzaHRhZzo8YnIvPiIgKyBwYXJhbXMuZGF0YS5oMSArICI8YnIvPiIgKyBwYXJhbXMuZGF0YS5oMiArICI8YnIvPiIgKyBwYXJhbXMuZGF0YS5oMzsKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIC8vSW5kaWNhdG9yCiAgICAgICAgICB2aXN1YWxNYXA6IHsKICAgICAgICAgICAgbGVmdDogInJpZ2h0IiwKICAgICAgICAgICAgbWluOiAwLAogICAgICAgICAgICBtYXg6IDIwMCwKICAgICAgICAgICAgaW5SYW5nZTogewogICAgICAgICAgICAgIGNvbG9yOiBbIiMzMTM2OTUiLCAiIzQ1NzViNCIsICIjNzRhZGQxIiwgIiNhYmQ5ZTkiLCAiI2UwZjNmOCIsICIjZmZmZmJmIiwgIiNmZWUwOTAiLCAiI2ZkYWU2MSIsICIjZjQ2ZDQzIiwgIiNkNzMwMjciLCAiI2E1MDAyNiJdCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHRleHQ6IFsiSGlnaCIsICJMb3ciXSwKICAgICAgICAgICAgY2FsY3VsYWJsZTogZmFsc2UKICAgICAgICAgIH0sCiAgICAgICAgICAvL1Rvb2wgYm94CiAgICAgICAgICB0b29sYm94OiB7CiAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgIGxlZnQ6ICJsZWZ0IiwKICAgICAgICAgICAgdG9wOiAidG9wIiwKICAgICAgICAgICAgZmVhdHVyZTogewogICAgICAgICAgICAgIGRhdGFWaWV3OiB7CiAgICAgICAgICAgICAgICByZWFkT25seTogZmFsc2UKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIHJlc3RvcmU6IHt9LAogICAgICAgICAgICAgIHNhdmVBc0ltYWdlOiB7fQogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgICBuYW1lOiAiQXVzdHJhbGlhIE1hcCIsCiAgICAgICAgICAgIHR5cGU6ICJtYXAiLAogICAgICAgICAgICByb2FtOiB0cnVlLAogICAgICAgICAgICBhc3BlY3RTY2FsZTogMC45LAogICAgICAgICAgICB6b29tOiAxLjMsCiAgICAgICAgICAgIG1hcDogIkF1c3RyYWxpYSIsCiAgICAgICAgICAgIGVtcGhhc2lzOiB7CiAgICAgICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgICAgICAvL01hcCBzaG93aW5nCiAgICAgICAgICAgICAgICBmb3JtYXR0ZXI6IGZ1bmN0aW9uIChwYXJhbXMpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIHBhcmFtcy5kYXRhLnNhNDsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHRleHRGaXhlZDogewogICAgICAgICAgICAgIEFsYXNrYTogWzIwLCAtMjBdCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGRhdGE6IGFsbF9kYXRhWyJkYXRhIl0KICAgICAgICAgIH1dCiAgICAgICAgfTsKICAgICAgICBteUNoYXJ0LmhpZGVMb2FkaW5nKCk7IC8vZWNoYXJ0cyBsb2FkaW5nIGNsb3N1cmUKCiAgICAgICAgbXlDaGFydC5zZXRPcHRpb24ob3B0aW9uKTsgLy9lY2hhcnRzIGRyYXdpbmcKICAgICAgfSk7CiAgICB9CgogIH0KfTs="},{"version":3,"sources":["map.vue"],"names":[],"mappings":"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","sourcesContent":["\n\n<template>\n  <div class=\"about\">\n    <div id=\"Map\" style=\"width: 2000px;height:812px;\"></div>\n  </div>\n</template>\n<script>\nimport axios from \"@/assets/axios.js\";\nexport default {\n  data() {\n    return {};\n  },\n  mounted() {\n    this.draw();\n  },\n  methods: {\n    data_process(LatLon, the_data) {\n      let data = [];\n      let count_LatLon = 0;\n      //Define the value for each variable\n      for (var key in LatLon[\"features\"]) {\n        count_LatLon++;\n        let name_value = LatLon[\"features\"][key][\"properties\"][\"SA4_CODE\"];\n        let name_value1 = LatLon[\"features\"][key][\"properties\"][\"STATE_NAME\"];\n        LatLon[\"features\"][key][\"properties\"][\"name\"] = name_value;\n        if (the_data[name_value]) {\n          let json = {\n            name: name_value,\n            value: the_data[name_value][\"pol\"] * 1000,\n            inc: the_data[name_value][\"inc\"],\n            edu: the_data[name_value][\"edu\"],\n            emo: the_data[name_value][\"pol1\"],\r\n\t\t\th1 : the_data[name_value][\"hashtag1\"],\r\n\t\t\th2 : the_data[name_value][\"hashtag2\"],\r\n\t\t\th3 : the_data[name_value][\"hashtag3\"],\n            State_name:\n              LatLon[\"features\"][key][\"properties\"][\"SA4_NAME\"] +\n              \", \" +\n              name_value1,\n            sa4: LatLon[\"features\"][key][\"properties\"][\"SA4_NAME\"]\n          };\n          data.push(json);\n        }\n      }\n      let count_data = 0;\n      return { LatLon: LatLon, data: data };\n    },\n    //echarts drawing\n    draw() {\n      let myChart = this.$echarts.init(document.getElementById(\"Map\"));\n      myChart.showLoading();\n      //Get data from json and Back-end\n      let LatLon = require(\"../assets/json/SA4_2016_AUST.json\");\n      let test_data = [];\n      axios({\n        method: \"GET\",\n        url: \"http://127.0.0.1:5000/admin\"\n      }).then(res => {\n        test_data = res.data;\n        console.log(test_data);\n        let all_data = this.data_process(LatLon, test_data);\n        console.log(all_data);\n        this.$echarts.registerMap(\"Australia\", all_data[\"LatLon\"]);\n        let option = {\n          backgroundColor: \"rgb(169,216,253)\",\n          title: {\n            text: \"Heat Map of People's Mood in Australia by Different Areas\",\n            left: \"right\"\n          },\n          tooltip: {\n            position: function(point, params, dom, rect, size) {\n              //Text position\n              return { right: \"20px\", top: \"20px\" };\n            },\n            left: \"left\",\n            trigger: \"item\",\n            showDelay: 0,\n            transitionDuration: 0.2,\n            formatter: function(params) {\n              //Text content\n              var value = (params.value + \"\").split(\".\");\n              value = value[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, \"$1,\");\n              return (\n                \"SA4 Code: \" +\r\n                params.data.name +\r\n                \"<br/>\" +\r\n                params.data.State_name +\r\n                \"<br/> Emotion: \" +\r\n                params.data.emo +\r\n                \"<br/> Income: $\" +\r\n                params.data.inc +\r\n                \"<br/>Education Level: \" +\r\n                params.data.edu +\r\n                \"%<br/>Top 3 Hashtag:<br/>\" +\r\n                params.data.h1 +\r\n                \"<br/>\" +\r\n                params.data.h2 +\r\n                \"<br/>\" +\r\n                params.data.h3\n              );\n            }\n          },\n          //Indicator\n          visualMap: {\n            left: \"right\",\n            min: 0,\n            max: 200,\n            inRange: {\n              color: [\n                \"#313695\",\n                \"#4575b4\",\n                \"#74add1\",\n                \"#abd9e9\",\n                \"#e0f3f8\",\n                \"#ffffbf\",\n                \"#fee090\",\n                \"#fdae61\",\n                \"#f46d43\",\n                \"#d73027\",\n                \"#a50026\"\n              ]\n            },\n            text: [\"High\", \"Low\"],\n            calculable: false\n          },\n          //Tool box\n          toolbox: {\n            show: true,\n            left: \"left\",\n            top: \"top\",\n            feature: {\n              dataView: { readOnly: false },\n              restore: {},\n              saveAsImage: {}\n            }\n          },\n          series: [\n            {\n              name: \"Australia Map\",\n              type: \"map\",\n              roam: true,\n              aspectScale: 0.9,\n              zoom: 1.3,\n              map: \"Australia\",\n              emphasis: {\n                label: {\n                  show: true, //Map showing\n                  formatter: function(params) {\n                    return params.data.sa4;\n                  }\n                }\n              },\n              textFixed: {\n                Alaska: [20, -20]\n              },\n              data: all_data[\"data\"]\n            }\n          ]\n        };\n        myChart.hideLoading(); //echarts loading closure\n        myChart.setOption(option); //echarts drawing\n      });\n    }\n  }\n};\n</script>\n<style scoped>\n.about {\n  display: flex;\n  justify-content: center;\n}\n</style>\n"],"sourceRoot":"src/views"}]}