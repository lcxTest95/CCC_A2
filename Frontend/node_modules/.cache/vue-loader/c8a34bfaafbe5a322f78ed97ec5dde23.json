{"remainingRequest":"/Users/xl/Desktop/学习/COMP90024/Assignment2/project/CCC_A2/Frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xl/Desktop/学习/COMP90024/Assignment2/project/CCC_A2/Frontend/src/views/graphs.vue?vue&type=style&index=0&id=2f7ea4ff&scoped=true&lang=css&","dependencies":[{"path":"/Users/xl/Desktop/学习/COMP90024/Assignment2/project/CCC_A2/Frontend/src/views/graphs.vue","mtime":1590364333842},{"path":"/Users/xl/Desktop/学习/COMP90024/Assignment2/project/CCC_A2/Frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xl/Desktop/学习/COMP90024/Assignment2/project/CCC_A2/Frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/xl/Desktop/学习/COMP90024/Assignment2/project/CCC_A2/Frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/xl/Desktop/学习/COMP90024/Assignment2/project/CCC_A2/Frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xl/Desktop/学习/COMP90024/Assignment2/project/CCC_A2/Frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmdyYXBocyB7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgbWluLXdpZHRoOiAxNzAwcHg7CiAgbWF4LXdpZHRoOiA5OXZ3Owp9Ci5ncmFwaHMgL2RlZXAvIC5lbC10cmFuc2Zlci1wYW5lbCB7CiAgd2lkdGg6IDIwMHB4OwogIGhlaWdodDogMzUwcHg7Cn0KLmdyYXBocyAvZGVlcC8gLmVsLXRyYW5zZmVyLXBhbmVsX19saXN0LmlzLWZpbHRlcmFibGUgewogIGhlaWdodDogNDAwcHg7Cn0KLmdyYXBocyAvZGVlcC8gLmVsLWNoZWNrYm94LWdyb3VwIDo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIgewogIGJhY2tncm91bmQtY29sb3I6ICNhMWEzYTk7CiAgYm9yZGVyLXJhZGl1czogM3B4Owp9Cg=="},{"version":3,"sources":["graphs.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"graphs.vue","sourceRoot":"src/views","sourcesContent":["\n<template>\n  <div class=\"graphs\">\n    <div>\n      <div style=\"width:900px;height:350px;margin-top:30px;\">\n        <el-transfer\n          style=\"text-align: left; display: inline-block;height:400px;\"\n          v-model=\"value\"\n          filterable\n          :render-content=\"renderFunc\"\n          :titles=\"['Source', 'Target']\"\n          :button-texts=\"['Delete', 'Add']\"\n          :format=\"{\n        noChecked: '${total}',\n        hasChecked: '${checked}/${total}'\n      }\"\n          @change=\"handleChange\"\n          :data=\"legendData\"\n        ></el-transfer>\n      </div>\n      <div\n        id=\"inc_edu\"\n        style=\"width:800px;height:400px;margin-top:30px;margin-left:70px;position:relative;left:0px;\"\n      ></div>\n    </div>\n    <div style=\"width:50%;margin-right:30px;margin-top:20px;\">\n      <div id=\"income\" style=\"width:700px;height:400px;float:right\"></div>\n      <div id=\"education\" style=\"width:700px;height:400px;float:right\"></div>\n    </div>\n  </div>\n</template>\n<script>\nimport axios from \"@/assets/axios.js\";\nexport default {\n  data() {\n    return {\n      all_data: [],\n      selected: {},\n      legendData: [],\n      value: [66, 50, 73, 47, 23],\n      renderFunc(h, option) {\n        return h(\"span\", {}, option.label);\n      }\n    };\n  },\n  mounted() {\n    this.data_process();\n  },\n  methods: {\n    handleChange(value, direction, movedKeys) {\n      if (this.value.length > 5) {\n        alert(\"Exceed the maximum value of 5, please choose again!\");\n        for (var i = this.value.length - 1; i >= 0; i--) {\n          let a = this.value[i];\n          for (var j = movedKeys.length - 1; j >= 0; j--) {\n            let b = movedKeys[j];\n            if (a == b) {\n              this.value.splice(i, 1);\n              movedKeys.splice(j, 1);\n              break;\n            }\n          }\n        }\n      }\n      this.draw_inc();\n      this.draw_edu();\n      this.draw_inc_edu();\n    },\n     data_process() {\n      //Get data from Back-end\n\t  let LatLon = require(\"../assets/json/SA4_2016_AUST.json\");\n      axios({\n        method: \"GET\",\n        url: \"http://127.0.0.1:5000/admin\"\n      }).then(res => {\n        let test_data = res.data;\n        let data = [];\n        let count_LatLon = 0;\n        for (var key1 in LatLon[\"features\"]) {\n          count_LatLon++;\n          let name_value = LatLon[\"features\"][key1][\"properties\"][\"SA4_CODE\"];\n          let name_value1 =\n            LatLon[\"features\"][key1][\"properties\"][\"STATE_NAME\"];\n          LatLon[\"features\"][key1][\"properties\"][\"name\"] = name_value;\n          if (test_data[name_value]) {\n            let json = {\n              name: LatLon[\"features\"][key1][\"properties\"][\"SA4_NAME\"],\n              inc: test_data[name_value][\"inc\"],\n              edu: test_data[name_value][\"edu\"]\n            };\n            data.push(json);\n            if (this.legendData.length < 89) {\n              this.legendData.push({\n                disabled: false,\n                key: Number(key1),\n                label: LatLon[\"features\"][key1][\"properties\"][\"SA4_NAME\"]\n              });\n            }\n          }\n        }\n        this.all_data = data;\n        this.draw_inc();\n        this.draw_edu();\n        this.draw_inc_edu();\n      });\n    },\n    //Income Pie Chart\n    draw_inc() {\n      var data_list = [];\n      var name_list = [];\n      for (var i = 0; i < this.value.length; i++) {\n        data_list.push({\n          name: this.all_data[this.value[i]].name,\n          value: this.all_data[this.value[i]].inc\n        });\n        name_list.push(this.all_data[this.value[i]].name);\n      }\n      var myChart = this.$echarts.init(document.getElementById(\"income\"));\n      var option = {\n        title: {\n          text: \"Median Income per Employed Person\",\n          left: \"center\",\n          top: \"20px\"\n        },\n        tooltip: {\n          trigger: \"item\",\n          formatter: \"{b} : {c} ({d}%)\"\n        },\n        legend: {\n          orient: \"vertical\",\n          left: \"right\",\n\n          data: name_list\n        },\n        series: [\n          {\n            name: \"Visit Source\",\n            type: \"pie\",\n            radius: \"55%\",\n            center: [\"50%\", \"60%\"],\n            data: data_list,\n            emphasis: {\n              itemStyle: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: \"rgba(0, 0, 0, 0.5)\"\n              }\n            }\n          }\n        ]\n      };\n      myChart.setOption(option);\n    },\n    // Education Pie Chart\n    draw_edu() {\n      var data_list = [];\n      var name_list = [];\n      for (var i = 0; i < this.value.length; i++) {\n        data_list.push({\n          name: this.all_data[this.value[i]].name,\n          value: this.all_data[this.value[i]].edu\n        });\n        name_list.push(this.all_data[this.value[i]].name);\n      }\n      var myChart = this.$echarts.init(document.getElementById(\"education\"));\n      var option = {\n        title: {\n          text: \"Aged 15 Years &\" + '\\n' + \"Over Completed Year 9 Or Equivalent\",\n          left: \"center\",\n          top: \"20px\"\n        },\n        tooltip: {\n          trigger: \"item\",\n          formatter: \"{b} : {c} ({d}%)\"\n        },\n        legend: {\n          orient: \"vertical\",\n          left: \"right\",\n          data: name_list\n        },\n        series: [\n          {\n            name: \"Visit Source\",\n            type: \"pie\",\n            radius: \"55%\",\n            center: [\"50%\", \"60%\"],\n            data: data_list,\n            emphasis: {\n              itemStyle: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: \"rgba(0, 0, 0, 0.5)\"\n              }\n            }\n          }\n        ]\n      };\n      myChart.setOption(option);\n    },\n\t// Income and Education Bar Chart\n    draw_inc_edu() {\n      var data_list = [[], []];\n      var name_list = [];\n      for (var i = 0; i < this.value.length; i++) {\n        data_list[0].push(this.all_data[this.value[i]].inc);\n        data_list[1].push(this.all_data[this.value[i]].edu);\n        name_list.push(this.all_data[this.value[i]].name);\n      }\n      var myChart = this.$echarts.init(document.getElementById(\"inc_edu\"));\n      var option = {\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"cross\",\n            crossStyle: {\n              color: \"#999\"\n            }\n          }\n        },\n        toolbox: {\n          feature: {\n            dataView: { show: true, readOnly: false },\n            magicType: { show: true, type: [\"line\", \"bar\"] },\n            restore: { show: true },\n            saveAsImage: { show: true }\n          }\n        },\n        legend: {\n          data: [\"Income\", \"Education\"]\n        },\n        xAxis: [\n          {\n            type: \"category\",\n            data: name_list,\n            axisPointer: {\n              type: \"shadow\"\n            },\n            axisLabel: {\n              interval: 0,\n              rotate: 20\n            }\n          }\n        ],\n        yAxis: [\n          {\n            type: \"value\",\n            name: \"Income ($)\",\n            min: 0,\n            max: 72000,\n            interval: 6000,\n            axisLabel: {\n              formatter: \"{value}\"\n            }\n          },\n          {\n            type: \"value\",\n            name: \"Education level (%)\",\n            min: 0,\n            max: 12,\n            interval: 1,\n            axisLabel: {\n              formatter: \"{value} \"\n            }\n          }\n        ],\n        series: [\n          {\n            name: \"Income\",\n            type: \"bar\",\n            barWidth: 30,\n            data: data_list[0]\n          },\n          {\n            name: \"Education\",\n            type: \"bar\",\n            barWidth: 30,\n            yAxisIndex: 1,\n            data: data_list[1]\n          }\n        ]\n      };\n      myChart.setOption(option);\n    }\n  }\n};\n</script>\n<!--size of each chart-->\n<style scoped>\n.graphs {\n  display: flex;\n  justify-content: space-between;\n  min-width: 1700px;\n  max-width: 99vw;\n}\n.graphs /deep/ .el-transfer-panel {\n  width: 200px;\n  height: 350px;\n}\n.graphs /deep/ .el-transfer-panel__list.is-filterable {\n  height: 400px;\n}\n.graphs /deep/ .el-checkbox-group ::-webkit-scrollbar-thumb {\n  background-color: #a1a3a9;\n  border-radius: 3px;\n}\n</style>\n"]}]}